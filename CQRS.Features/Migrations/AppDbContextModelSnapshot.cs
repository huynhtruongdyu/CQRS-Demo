// <auto-generated />
using CQRS.FeaturesData.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CQRS.Features.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CQRS.Features.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Google"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Samsung"
                        });
                });

            modelBuilder.Entity("CQRS.Features.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            Name = "Iphone 13",
                            Price = 0.0
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            Name = "Iphone 13 Pro Max",
                            Price = 0.0
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 2,
                            Name = "Google Pixel 4",
                            Price = 0.0
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 2,
                            Name = "Google Pixel 5",
                            Price = 0.0
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 2,
                            Name = "Google Pixel 6",
                            Price = 0.0
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 3,
                            Name = "Samsung S21 Ultra",
                            Price = 0.0
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 3,
                            Name = "Samsung Note 10",
                            Price = 0.0
                        });
                });

            modelBuilder.Entity("CQRS.Features.Entities.Product", b =>
                {
                    b.HasOne("CQRS.Features.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("CQRS.Features.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
